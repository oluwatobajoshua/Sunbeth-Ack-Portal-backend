openapi: 3.0.3
info:
  title: Sunbeth ACK API
  version: 1.0.0
  description: REST API for document acknowledgment portal
servers:
  - url: http://localhost:4000
paths:
  /api/health:
    get:
      summary: Health check
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok:
                    type: boolean
  /api/batches:
    get:
      summary: List batches for user
      parameters:
        - in: query
          name: email
          schema:
            type: string
      responses:
        '200':
          description: List of batches
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Batch'
  /api/batches/{id}/documents:
    get:
      summary: List documents in batch
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Documents
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Document'
  /api/batches/{id}/progress:
    get:
      summary: Get user progress for batch
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
        - in: query
          name: email
          schema:
            type: string
      responses:
        '200':
          description: Progress
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Progress'
  /api/businesses:
    get:
      summary: List businesses
      responses:
        '200':
          description: Businesses
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business'
    post:
      summary: Create business
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessCreate'
      responses:
        '200':
          description: Created
  /api/businesses/{id}:
    put:
      summary: Update business
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BusinessUpdate'
      responses:
        '200':
          description: Updated
    delete:
      summary: Delete business
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Deleted
  /api/external-users/login:
    post:
      summary: External user login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [email, password]
              properties:
                email: { type: string, format: email }
                password: { type: string, minLength: 8 }
      responses:
        '200':
          description: Login success or MFA required
          content:
            application/json:
              schema:
                type: object
                properties:
                  ok: { type: boolean }
                  mfaRequired: { type: boolean }
components:
  schemas:
    Batch:
      type: object
      properties:
        toba_batchid: { type: string }
        toba_name: { type: string }
        toba_startdate: { type: string, nullable: true }
        toba_duedate: { type: string, nullable: true }
        toba_status: { type: string, nullable: true }
    Document:
      type: object
      properties:
        toba_documentid: { type: string }
        toba_title: { type: string }
        toba_version: { type: string }
        toba_requiressignature: { type: boolean }
        toba_fileurl: { type: string }
    Progress:
      type: object
      properties:
        acknowledged: { type: integer }
        total: { type: integer }
        percent: { type: number }
    Business:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        code: { type: string, nullable: true }
        isActive: { type: boolean }
        description: { type: string, nullable: true }
    BusinessCreate:
      type: object
      required: [name]
      properties:
        name: { type: string, minLength: 1 }
        code: { type: string }
        isActive: { type: boolean }
        description: { type: string }
    BusinessUpdate:
      type: object
      properties:
        name: { type: string }
        code: { type: string }
        isActive: { type: boolean }
        description: { type: string }
